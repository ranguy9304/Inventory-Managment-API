# Generated by Django 4.0.3 on 2023-04-30 09:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('phone', models.PositiveIntegerField()),
                ('address', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('phone', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('jobStatus', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, null=True, unique=True)),
                ('photo', models.TextField(blank=True, null=True)),
                ('total', models.PositiveIntegerField()),
                ('remaining', models.PositiveIntegerField(null=True)),
                ('name', models.CharField(max_length=255)),
                ('price', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('productBeingSold', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductsGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('location', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StorageUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.PositiveIntegerField(default=10)),
            ],
        ),
        migrations.CreateModel(
            name='Suplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('phone', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StoredAt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('productId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.products')),
                ('storageId', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.storageunit')),
            ],
        ),
        migrations.AddField(
            model_name='products',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventories', to='api.productsgroup'),
        ),
        migrations.AddField(
            model_name='products',
            name='supId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supliers', to='api.suplier'),
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branchId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.shop')),
                ('customerId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.customer')),
                ('empId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.employee')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=255, null=True)),
                ('item_code', models.CharField(max_length=20, null=True)),
                ('quantity', models.PositiveIntegerField()),
                ('amount', models.FloatField(null=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_items', to='api.invoice')),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Products_invoices', to='api.products')),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='orderNo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.orders'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='shop',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_shop', to='api.shop'),
        ),
        migrations.AddField(
            model_name='employee',
            name='branchId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.shop'),
        ),
        migrations.CreateModel(
            name='StorageLinked',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ShopId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.shop')),
                ('storageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.storageunit')),
            ],
            options={
                'unique_together': {('storageId', 'ShopId')},
            },
        ),
        migrations.CreateModel(
            name='ProductSold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('orderId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.orders')),
                ('productId', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.products')),
            ],
            options={
                'unique_together': {('productId', 'orderId')},
            },
        ),
    ]
